import { NextResponse } from "next/server";
import type { NextRequest } from "next/server";

export async function middleware(req: NextRequest) {
  const url = req.nextUrl;
  const token = req.cookies.get("auth-token")?.value; // ‡∏î‡∏∂‡∏á token ‡∏à‡∏≤‡∏Å cookies
  console.log("url", url.pathname);
  // ‚úÖ ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Static Files ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö token
  if (url.pathname.startsWith("/_next/static") || 
      url.pathname.startsWith("/_next/image") || 
      url.pathname === "/favicon.ico" || 
      url.pathname === "/robots.txt" || 
      url.pathname === "/api/user/login") { // ‡∏Ç‡πâ‡∏≤‡∏° /api/user/login
    return NextResponse.next();
  }

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ token ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏´‡∏ô‡πâ‡∏≤ "/"
  if (!token && url.pathname !== "/") {
    return NextResponse.redirect(new URL("/", req.url)); // Redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ "/"
  }

  return NextResponse.next(); // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ request ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ
}

// üî• ‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Middleware (‡∏ó‡∏∏‡∏Å‡∏´‡∏ô‡πâ‡∏≤ ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô "/")
export const config = {
  matcher: [
    "/((?!_next/static|_next/image|favicon.ico|robots.txt|api/user/login).*)", // ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô /api/user/login
  ],
};
